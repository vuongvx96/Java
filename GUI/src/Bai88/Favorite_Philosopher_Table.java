/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Bai88;

import java.awt.Color;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.MatteBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author vuong
 */
public class Favorite_Philosopher_Table extends javax.swing.JFrame {
    /**
     * Creates new form Favorite_Philosopher_Table
     */
    public Favorite_Philosopher_Table() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhilo = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Favorite Philosopher");

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAdd.setText("Add Philosopher");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnRemove.setText("Remove Selected Philosopher");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnRemove))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblPhilo.setBorder(new javax.swing.border.MatteBorder(null));
        tblPhilo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblPhilo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Years"
            }
        ));
        jScrollPane1.setViewportView(tblPhilo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        JTextField field1 = new JTextField();
        JTextField field2 = new JTextField();
        JTextField field3 = new JTextField();
        Object[] message = {
            "First Name: ", field1,
            "Last Name: ", field2,
            "Years: ", field3,
        };
        int option = JOptionPane.showConfirmDialog(null, message,"Nhập thông tin",JOptionPane.YES_OPTION);
        if (option == JOptionPane.YES_OPTION){
            // 1. Lấy về model 
            TableModel mData = tblPhilo.getModel();
            // 2. Chuyển sang kiểu Vector cho dễ thao tác
            Vector<Vector<String>> data = new Vector<>();
            // Đổ dữ liệu từ mData -> data
            int soHang = mData.getRowCount();
            int soCot = mData.getColumnCount();
            for (int i = 0; i < soHang; i++){
                Vector<String> hang = new Vector<>();
                for (int j = 0; j < soCot; j++)
                    if (mData.getValueAt(i, j) != null)
                        hang.add(mData.getValueAt(i, j).toString());
                data.add(hang);
            }
            // Hàng mới
            Vector<String> hangmoi = new Vector<>();
            hangmoi.add(field1.getText());
            hangmoi.add(field2.getText());
            hangmoi.add(field3.getText());
            // Thêm vào danh sách hàng
            data.add(hangmoi);
            // 3. Cập nhật lại JTable
            DefaultTableModel model = new DefaultTableModel();
            String[] title = {"First Name","Last Name","Years"};
            model.setColumnCount(soCot);
            model.setColumnIdentifiers(title);
            // tính toán model
            for (int i = 0; i < data.size(); i++){
                Vector<String> rowData = data.get(i);
                model.addRow(rowData);
            }
            // cập nhật
            tblPhilo.setModel(model);
            tblPhilo.setShowGrid(true);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // 1. Lấy về model 
        TableModel mData = tblPhilo.getModel();
        // 2. Chuyển sang kiểu Vector cho dễ thao tác
        Vector<Vector<String>> data = new Vector<>();
        // Đổ dữ liệu từ mData -> data
        int soHang = mData.getRowCount();
        int soCot = mData.getColumnCount();
            for (int i = 0; i < soHang; i++){
                Vector<String> hang = new Vector<>();
                for (int j = 0; j < soCot; j++)
                    if (mData.getValueAt(i, j) != null)
                        hang.add(mData.getValueAt(i, j).toString());
                data.add(hang);
            }
        int rowSelected = tblPhilo.getSelectedRow();
        if (rowSelected == -1)
            JOptionPane.showConfirmDialog(null, "Bạn chưa chọn dòng nào!","Thông tin",JOptionPane.YES_OPTION);
        else 
            if (JOptionPane.showConfirmDialog(null,"Bạn có chắc chắn muốn xóa?","Cảnh báo", JOptionPane.OK_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE) == JOptionPane.OK_OPTION)
                data.remove(rowSelected);
        // 3. Cập nhật lại JTable
        DefaultTableModel model = new DefaultTableModel();
        String[] title = {"First Name","Last Name","Years"};
        model.setColumnCount(soCot);
        model.setColumnIdentifiers(title);
        // tính toán model
        for (int i = 0; i < data.size(); i++){
            Vector<String> rowData = data.get(i);
                model.addRow(rowData);
        }
        // cập nhật
        tblPhilo.setModel(model);
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Favorite_Philosopher_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Favorite_Philosopher_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Favorite_Philosopher_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Favorite_Philosopher_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Favorite_Philosopher_Table().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPhilo;
    // End of variables declaration//GEN-END:variables
}

